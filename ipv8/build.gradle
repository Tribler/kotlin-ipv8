apply plugin: 'kotlin'
apply plugin: 'java-library'
apply plugin: 'jacoco'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'app.cash.sqldelight'

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/dokka"
}

sqldelight {
    databases {
        Database {
            packageName = "nl.tudelft.ipv8.sqldelight"
            srcDirs = files(["src/main/sqldelight"])
            schemaOutputDirectory = file("src/main/sqldelight/databases")
        }
    }
}

ktlint {
    version = "$ktlint_version"
    android = true
    outputToConsole = true
    ignoreFailures = false
    verbose = true

    filter {
        // https://github.com/JLLeitschuh/ktlint-gradle/issues/97
        exclude { "**/generated/**" }
        // https://github.com/JLLeitschuh/ktlint-gradle/issues/266
        exclude { element -> element.file.path.contains("generated/") }
    }
}

test {
    minHeapSize = "512M"
    maxHeapSize = "2048M"
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = true
        html.required = true
    }

    // TODO: exclude generated files
    afterEvaluate {
        getClassDirectories().setFrom(files(classDirectories.files.collect {
            fileTree(
                dir: it,
                exclude: ["**/sqldelight/**"]
            )
        }))
    }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Network utils
    implementation 'commons-net:commons-net:3.6'

    // Crypto
    implementation "com.goterl:lazysodium-java:5.1.4"

    // Logging
    implementation 'io.github.microutils:kotlin-logging:1.7.7'

    // JSON
    implementation 'org.json:json:20201115'

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "app.cash.sqldelight:sqlite-driver:$sqldelight_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"


    // https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15on
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15to18', version: '1.63'

    api 'com.github.PieterCarton:utp4j:v0.0.2'

}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += [
        "-opt-in=kotlin.ExperimentalUnsignedTypes",
        "-Werror" // Set Kotlin compiler warnings as errors
    ]
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
